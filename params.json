{"name":"Logster.io Documentation","tagline":"Documentation for Logster.io","body":"# Welcome to Logster.io\r\n\r\n## Getting Started\r\n\r\n### Logster Configuration\r\n\r\nAdd the following to your app.config or web.config:\r\n\r\n    <configSections>\r\n        <section name=\"logster\" type=\"Logster.Client.LogsterSection, Logster.Client\" />\r\n    </configSections>\r\n    \r\n    <logster apiKey=\"your-api-key\" application=\"Logster.Samples.Web\" />\r\n\r\nYou can find your api key by viewing [your subscription](/Manage/Plan).\r\n\r\n### log4net\r\n\r\n[Install with NuGet](https://www.nuget.org/packages/Logster.log4net)\r\n\r\n<div class=\"nuget-badge\">\r\n    <code>PM> Install-Package Logster.log4net</code>\r\n</div>\r\n\r\n#### Configuration\r\n\r\nFirst, [configure logster](#toc-logster-configuration). Then, configure log4net.\r\n\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <configuration>\r\n      <log4net>\r\n        <appender name=\"logster\" type=\"Logster.Client.log4net.LogsterAppender, Logster.Client.log4net\">\r\n          <layout type=\"log4net.Layout.PatternLayout\">\r\n            <category>Log Category</category>\r\n            <conversionPattern value=\"%date [%thread] %-5level %logger [%ndc] &lt;%property{auth}&gt; - %message%newline\" />\r\n          </layout>\r\n        </appender>\r\n        <root>\r\n          <appender-ref ref=\"logster\" />\r\n        </root>\r\n      </log4net>\r\n    </configuration>\r\n\r\nAsync configuration with [Log4Net.Async](https://github.com/cjbhaines/Log4Net.Async)\r\n\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <configuration>\r\n      <log4net>\r\n        <appender name=\"logster\" type=\"Logster.Client.log4net.LogsterAppender, Logster.Client.log4net\">\r\n          <layout type=\"log4net.Layout.PatternLayout\">\r\n            <category>Log Category</category>\r\n            <conversionPattern value=\"%date [%thread] %-5level %logger [%ndc] &lt;%property{auth}&gt; - %message%newline\" />\r\n          </layout>\r\n        </appender>\r\n        <appender name=\"asyncForwarder\" type=\"Log4Net.Async.AsyncForwardingAppender,Log4Net.Async\">\r\n          <appender-ref ref=\"logster\" />\r\n        </appender>\r\n        <root>\r\n          <appender-ref ref=\"asyncForwarder\" />\r\n        </root>\r\n      </log4net>\r\n    </configuration>\r\n\r\n#### Usage\r\n\r\nSee the [console sample](https://github.com/logster/Logster.Samples/tree/master/Logster.Samples.Console) for a complete example. \r\n\r\n    private static void Main(string[] args)\r\n    {\r\n        // load the log4net configuration in app.config\r\n        XmlConfigurator.Configure();\r\n    \r\n        ILog log = LogManager.GetLogger(typeof (Program));\r\n    \r\n        log.Info(\"Starting up ...\");\r\n    \r\n        for (var i = 0; i < 10; i++)\r\n        {\r\n            log.Info(i + \"... \");\r\n        }\r\n    \r\n        log.Info(\"Done.\");\r\n    \r\n        // call shutdown to write any pending events in the async queue\r\n        LogManager.Shutdown();\r\n    }\r\n\r\n### NLog\r\n\r\n[Install with NuGet](https://www.nuget.org/packages/Logster.NLog)\r\n\r\n<div class=\"nuget-badge\">\r\n    <code>PM> Install-Package Logster.NLog</code>\r\n</div>\r\n\r\n#### Configuration\r\n\r\nFirst, [configure logster](#toc-logster-configuration). Then, configure NLog.\r\n\r\n    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n    <nlog throwExceptions=\"false\" internalLogLevel=\"Off\">\r\n        <extensions>\r\n            <add assembly=\"Logster.Client.NLog\" />\r\n        </extensions>\r\n        <targets>\r\n            <target name=\"logster\" type=\"Logster\" category=\"Log Category\" />\r\n        </targets>\r\n        <rules>\r\n            <logger name=\"*\" minlevel=\"Trace\" writeTo=\"logster\" />\r\n        </rules>\r\n    </nlog>\r\n\r\nAsync configuration with [AsyncWrapper](https://github.com/nlog/NLog/wiki/AsyncWrapper-target)\r\n\r\n    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n    <nlog throwExceptions=\"false\" internalLogLevel=\"Off\">\r\n      <extensions>\r\n        <add assembly=\"Logster.Client.NLog\"/>\r\n      </extensions>\r\n      <targets>\r\n        <target xsi:type=\"AsyncWrapper\" name=\"asyncWrapper\" overflowAction=\"Block\">\r\n          <target name=\"logster\" xsi:type=\"Logster\" category=\"Log Category\" />\r\n        </target>\r\n      </targets>\r\n      <rules>\r\n        <logger name=\"*\" minlevel=\"Trace\" writeTo=\"logster\"/>\r\n      </rules>\r\n    </nlog>\r\n\r\n#### Usage\r\n\r\nSee the [web sample](https://github.com/logster/Logster.Samples/tree/master/Logster.Samples.Web) for a complete example. \r\n\r\n    protected void Application_Error(object sender, EventArgs e)\r\n    {\r\n        Exception ex = Server.GetLastError();\r\n        if (ex != null)\r\n        {\r\n            var log = LogManager.GetLogger(\"Global\");\r\n            log.Error(ex);\r\n        }\r\n    }\r\n\r\n### Web\r\n\r\n[Install with NuGet](https://www.nuget.org/packages/Logster.Web)\r\n\r\n<div class=\"nuget-badge\">\r\n    <code>PM> Install-Package Logster.Web</code>\r\n</div>\r\n\r\n#### Configuration\r\n\r\n[Configure logster](#toc-logster-configuration). No additional configuration is necessary.\r\n\r\n#### Usage\r\n\r\nSee the [web api sample](https://github.com/logster/Logster.Samples/tree/master/Logster.Samples.WebApi) for a complete example.\r\n\r\n    private void Log(string text, string user, Uri url)\r\n    {\r\n        var message = new LogMessage\r\n                            {\r\n                                Application = GetType().Assembly.GetName().Name,\r\n                                Category = url.ToString(),\r\n                                Message = text,\r\n                                Severity = Severity.Trace,\r\n                                User = user\r\n                            };\r\n    \r\n        var log = new LogsterWebLog();\r\n        log.LogInBackground(message);\r\n    }\r\n\r\n## Documentation\r\n\r\n### Client Documentation\r\n\r\n - [log4net](/Docs/Api/N_Logster_Client_log4net)\r\n - [NLog](/Docs/Api/N_Logster_Client_NLog)\r\n - [Web](/Docs/Api/N_Logster_Client_Web)\r\n - [Samples](https://github.com/logster/Logster.Samples) - sample applications for console, web, api, and more.\r\n\r\n### API Documentation\r\n\r\nBuild your own client with our RESTful API. Simply POST your [message](/Docs/Api/T_Logster_Core_ILogMessage) to **https://api.logster.io/api/Log** as JSON or XML and include your api key in the **ApiKey** header.\r\n\r\nHere's an example request made with Postman:\r\n\r\n    POST https://api.logster.io/api/Log HTTP/1.1\r\n    Host: api.logster.io\r\n    Connection: keep-alive\r\n    Content-Length: 399\r\n    Cache-Control: no-cache\r\n    Origin: chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop\r\n    ApiKey: <your api key>\r\n    Content-Type: application/json\r\n    User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.111 Safari/537.36\r\n    Postman-Token: <token>\r\n    Accept: */*\r\n    Accept-Encoding: gzip, deflate\r\n    Accept-Language: en-US,en;q=0.8\r\n\r\n    {\r\n      \"Exception\": \"System.ApplicationException: An unhandled widget exception occurred.\",\r\n      \"Message\": \"Uh-oh, something happened.\",\r\n      \"StackTrace\": \"   at Logster.Web.Api.Areas.HelpPage.App_Start.HelpPageConfig.Register(HttpConfiguration config) in Program.cs:line 42\\r\\n\",\r\n      \"Severity\": 4,\r\n      \"Category\": \"Widget Designer\",\r\n      \"Application\": \"Your Awesome Application\",\r\n      \"User\": \"john-doe\"\r\n    }\r\n\r\nIf your POST was successful, the response will have a status code of 200 and will contain the MessageId in the body.\r\n\r\n    HTTP/1.1 200 OK\r\n    Cache-Control: no-cache\r\n    Pragma: no-cache\r\n    Content-Type: application/json; charset=utf-8\r\n    Expires: -1\r\n    Server: Microsoft-IIS/10.0\r\n    X-AspNet-Version: 4.0.30319\r\n    X-Powered-By: ASP.NET\r\n    Date: Thu, 21 Jan 2016 03:49:47 GMT\r\n    Content-Length: 48\r\n\r\n    {\"MessageId\":\"7892\"}\r\n\r\nIf something is missing or incorrect in the request, you'll get an error response. Note the 400 status code and ModelState in the body.\r\n\r\n    HTTP/1.1 400 Bad Request\r\n    Cache-Control: no-cache\r\n    Pragma: no-cache\r\n    Content-Type: application/json; charset=utf-8\r\n    Expires: -1\r\n    Server: Microsoft-IIS/10.0\r\n    X-AspNet-Version: 4.0.30319\r\n    X-Powered-By: ASP.NET\r\n    Date: Thu, 21 Jan 2016 03:57:04 GMT\r\n    Content-Length: 172\r\n\r\n    {\r\n        \"Message\":\"The request is invalid.\",\r\n        \"ModelState\":\r\n        {\r\n            \"message.Message\":[\"The Message field is required.\"],\r\n            \"message.Severity\":[\"The field Severity must be between 0 and 6.\"]\r\n        }\r\n    }\r\n\r\nSee the [API Help Page](https://api.logster.io/Help) for more information.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}